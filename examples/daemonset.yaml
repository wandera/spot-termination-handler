apiVersion: v1
kind: ServiceAccount
metadata:
  name: spot-termination-handler
  namespace: kube-system
  labels:
    app: spot-termination-handler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spot-termination-handler
  labels:
    app: spot-termination-handler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spot-termination-handler
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: spot-termination-handler
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spot-termination-handler
  labels:
    app: spot-termination-handler
rules:
  # For draining nodes
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spot-termination-handler
  namespace: kube-system
  labels:
    app: spot-termination-handler
spec:
  selector:
    matchLabels:
      app: spot-termination-handler
  template:
    metadata:
      labels:
        app: spot-termination-handler
    spec:
      serviceAccountName: spot-termination-handler
      tolerations:
      - effect: NoSchedule
        operator: "Exists"
      nodeSelector:
        "node-role.kubernetes.io/spot-worker": "true"
      containers:
      - name: spot-termination-handler
        image: wanderadock/spot-termination-handler:v0.0.1
        imagePullPolicy: IfNotPresent
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 20Mi
